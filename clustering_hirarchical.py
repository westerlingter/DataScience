# -*- coding: utf-8 -*-
"""clustering_hirarchical.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U_jfysinEAG_F111gpzZ0Ws7DjNFN1pr
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
from scipy import ndimage
from scipy.cluster import hierarchy
from scipy.spatial import distance_matrix
from matplotlib import pyplot as plt
from sklearn import manifold,datasets
from sklearn.cluster import AgglomerativeClustering
from sklearn.datasets import make_blobs
# %matplotlib inline

# x1, y1 = make_blobs(n_sample=30, centers=[[3,3],[2,1],[1,1]], cluster_std=0,9)
x,y = make_blobs(n_samples= 30, centers=[[4,4],[-2,-1],[2,-3]], cluster_std = 0.9)

plt.scatter(x[:,0],x[:,1], marker='o')

agglom = AgglomerativeClustering(n_clusters=3, linkage='complete')
agglom.fit(x,y)

# plt.figure(figsize=(6,4))

#tampilin hasilnya
plt.figure(figsize=(6,4))

x_min, x_max = np.min(x, axis=0), np.max(x, axis=0)

X1 = (x - x_min)/(x_max - x_min)

#perulangan untuk tiap node/point
for i in range(X1.shape[0]):
  plt.text(X1[i,0],X1[i,1],str(y[i])),
  color = plt.cm.nipy_spectral(agglom.labels_[i]/10),
  fontdict={'weight':'bold', 'size':9}

plt.xticks([])
plt.yticks([])

plt.scatter(X1[:,0],X1[:,1],marker='.')

plt.show()

#hitung matriks jarak
dist_matrix = distance_matrix(x,x)

print(dist_matrix)

# bendogram

z = hierarchy.linkage(dist_matrix, 'centroid')

grafik = hierarchy.dendrogram(z)

# kaggel => hierarhical clustering vih